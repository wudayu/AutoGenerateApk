//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.movitech.grande.fragment;

import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.movitech.grande.MainApp_;
import com.movitech.grande.generic.ImageUtils_;
import com.movitech.grande.haerbin.R.layout;
import com.movitech.grande.net.NetHandler_;
import com.movitech.grande.sp.UserSP_;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class MineFragment_
    extends MineFragment
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(layout.fragment_mine, container, false);
        }
        return contentView_;
    }

    private void init_(Bundle savedInstanceState) {
        userSP = new UserSP_(getActivity());
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        mApp = MainApp_.getInstance();
        netHandler = NetHandler_.getInstance_(getActivity());
        imageUtils = ImageUtils_.getInstance_(getActivity());
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static MineFragment_.FragmentBuilder_ builder() {
        return new MineFragment_.FragmentBuilder_();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        ivUserImage = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_user_image));
        txtWaitCommission = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_wait_commission));
        txtGrantCommission = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_grant_commission));
        txtCountImportentClient = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_count_importent_client));
        rlMyAttention = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_my_attention));
        txtCountSeaHouse = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_count_sea_house));
        txtIntegral = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_integral));
        llRecommendConfirmed = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_recommend_confirmed));
        txtCountRecommendSuccessed = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_count_recommend_successed));
        txtName = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_name));
        txtCurrentPosition = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_current_position));
        llImportentClient = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_importent_client));
        rlCommissionInfo = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_commission_info));
        rlMyTeam = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_my_team));
        rlPersonalInfo = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_personal_info));
        llLevelStatus = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_level_status));
        ivMyTeam = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_my_team));
        txtLevelStatus = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_level_status));
        llGrantCommission = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_grant_commission));
        llEarnedCommission = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_earned_commission));
        txtEarnedCommission = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_earned_commission));
        rlMyScore = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_my_score));
        llSellSuccessed = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_sell_successed));
        llWaitCommission = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_wait_commission));
        ivMyAttention = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_my_attention));
        ivMyScoreIndicator = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_my_score_indicator));
        txtCertificationStatus = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_certification_status));
        rlCertificationStatus = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_certification_status));
        ivMyScore = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_my_score));
        rlCurrentPlace = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_current_place));
        llClientBlockFragmentMine = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_client_block_fragment_mine));
        llSeaHouse = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_sea_house));
        llRecommendSuccessed = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_recommend_successed));
        txtCommissionTotal = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_commission_total));
        rlUserImage = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_user_image));
        txtCountSellSuccessed = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_count_sell_successed));
        llCurrentPlace = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_current_place));
        rlNameDetail = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_name_detail));
        txtCountRecommendConfirmed = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_count_recommend_confirmed));
        ivCertificationStatus = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_certification_status));
        rlBlock = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_block));
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_grant_commission);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.llGrantCommission();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_earned_commission);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.llEarnedCommission();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_recommend_successed);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.llRecommendSuccessed();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_sell_successed);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.llSellSuccessed();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_user_image);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.ivUserImage();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_importent_client);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.llImportentClient();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_sea_house);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.llSeaHouse();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_my_score);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.rlMyScore();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_my_attention);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.rlMyAttention();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_wait_commission);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.llWaitCommission();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_recommend_confirmed);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.llRecommendConfirmed();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_my_team);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        MineFragment_.this.rlMyTeam();
                    }

                }
                );
            }
        }
        afterViews();
    }

    @Override
    public void doBindData() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                MineFragment_.super.doBindData();
            }

        }
        );
    }

    @Override
    public void doLoadDataAndBindData() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    MineFragment_.super.doLoadDataAndBindData();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class FragmentBuilder_ {

        private Bundle args_;

        private FragmentBuilder_() {
            args_ = new Bundle();
        }

        public MineFragment build() {
            MineFragment_ fragment_ = new MineFragment_();
            fragment_.setArguments(args_);
            return fragment_;
        }

    }

}

//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.movitech.grande.fragment;

import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.movitech.grande.MainApp_;
import com.movitech.grande.generic.ImageUtils_;
import com.movitech.grande.haerbin.R.layout;
import com.movitech.grande.net.NetHandler_;
import com.movitech.grande.views.CirclePageIndicator;
import com.movitech.grande.views.LoadDataListView;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class HousesFragment_
    extends HousesFragment
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(layout.fragment_houses, container, false);
        }
        return contentView_;
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        mApp = MainApp_.getInstance();
        imageUtils = ImageUtils_.getInstance_(getActivity());
        netHandler = NetHandler_.getInstance_(getActivity());
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static HousesFragment_.FragmentBuilder_ builder() {
        return new HousesFragment_.FragmentBuilder_();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        ivRecommendHouses = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_recommend_houses));
        circleIndicator = ((CirclePageIndicator) hasViews.findViewById(com.movitech.grande.haerbin.R.id.circle_indicator));
        rlSearchHint = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_search_hint));
        rlSearch = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_search));
        rlTop = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_top));
        rlEarnCommission = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_earn_commission));
        rlOthersActivities = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_others_activities));
        txtSearchHint = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_search_hint));
        rlSearchBind = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_search_bind));
        txtEarnScoreDetail = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_earn_score_detail));
        txtOthersActivitiesDetail = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_others_activities_detail));
        rlEarnScore = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_earn_score));
        rlRecommendHouses = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_recommend_houses));
        rlEarnCommissionExternal = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_earn_commission_external));
        txtAdv = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_adv));
        llEarnButtons = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_earn_buttons));
        txtOthersActivities = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_others_activities));
        rlUnread = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_unread));
        txtLocation = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_location));
        txtUnread = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_unread));
        llRecommendHouses = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_recommend_houses));
        hsvRecommendHouses = ((HorizontalScrollView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.hsv_recommend_houses));
        rlSlideHint = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_slide_hint));
        llOthers = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_others));
        ivSlideHint = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_slide_hint));
        ivSearchHint = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_search_hint));
        ivAdvClose = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_adv_close));
        ivOthersTools = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_others_tools));
        lvSearchResult = ((LoadDataListView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.lv_search_result));
        txtRecommendHousesMore = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_recommend_houses_more));
        edtSearchString = ((EditText) hasViews.findViewById(com.movitech.grande.haerbin.R.id.edt_search_string));
        ivRecommendHousesMore = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_recommend_houses_more));
        ivOthersActivities = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_others_activities));
        rlMessage = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_message));
        ivEarnScore = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_earn_score));
        tvSearOk = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.tv_sear_ok));
        ivRecommendHousesCicle = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_recommend_houses_cicle));
        txtOthersToolsDetail = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_others_tools_detail));
        txtOthersTools = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_others_tools));
        txtEarnCommissionDetail = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_earn_commission_detail));
        vpPublicity = ((ViewPager) hasViews.findViewById(com.movitech.grande.haerbin.R.id.vp_publicity));
        ivLocation = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_location));
        tvSearchNum = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.tv_search_num));
        txtRecommendHouses = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_recommend_houses));
        txtEarnScore = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_earn_score));
        rlBody = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_body));
        rlAdv = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_adv));
        rlOthersTools = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_others_tools));
        ivMessage = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_message));
        ivAdv = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_adv));
        txtEarnCommission = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_earn_commission));
        ivEarnCommission = ((ImageView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_earn_commission));
        rlSearchBtn = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_search_btn));
        txtSlideHint = ((TextView) hasViews.findViewById(com.movitech.grande.haerbin.R.id.txt_slide_hint));
        llLocation = ((LinearLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.ll_location));
        rlEarnScoreExternal = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_earn_score_external));
        rlSearchHorizontal = ((RelativeLayout) hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_search_horizontal));
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_others_tools);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        HousesFragment_.this.rlOthersTools();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_search);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        HousesFragment_.this.rlSearch();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_adv_close);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        HousesFragment_.this.ivAdvClose();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_earn_score_external);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        HousesFragment_.this.rlEarnScoreExternal();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.iv_recommend_houses_more);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        HousesFragment_.this.ivRecommendHousesMore();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.vp_publicity);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        HousesFragment_.this.vpPublicity();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_message);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        HousesFragment_.this.rlMessage();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_others_activities);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        HousesFragment_.this.rlOthersActivities();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(com.movitech.grande.haerbin.R.id.rl_earn_commission_external);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        HousesFragment_.this.rlEarnCommissionExternal();
                    }

                }
                );
            }
        }
        afterViews();
    }

    @Override
    public void doBindData() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                HousesFragment_.super.doBindData();
            }

        }
        );
    }

    @Override
    public void goBackMainThreadBanner() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                HousesFragment_.super.goBackMainThreadBanner();
            }

        }
        );
    }

    @Override
    public void switchPage() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                HousesFragment_.super.switchPage();
            }

        }
        );
    }

    @Override
    public void doLoadDataAndBindData() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    HousesFragment_.super.doLoadDataAndBindData();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void doLoadHouseBannerData() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    HousesFragment_.super.doLoadHouseBannerData();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class FragmentBuilder_ {

        private Bundle args_;

        private FragmentBuilder_() {
            args_ = new Bundle();
        }

        public HousesFragment build() {
            HousesFragment_ fragment_ = new HousesFragment_();
            fragment_.setArguments(args_);
            return fragment_;
        }

    }

}

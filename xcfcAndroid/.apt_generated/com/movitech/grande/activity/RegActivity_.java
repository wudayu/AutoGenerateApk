//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.movitech.grande.activity;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.support.v4.app.Fragment;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.movitech.grande.MainApp_;
import com.movitech.grande.haerbin.R.id;
import com.movitech.grande.haerbin.R.layout;
import com.movitech.grande.net.NetHandler_;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class RegActivity_
    extends RegActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_reg);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        mApp = MainApp_.getInstance();
        netHandler = NetHandler_.getInstance_(this);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static RegActivity_.IntentBuilder_ intent(Context context) {
        return new RegActivity_.IntentBuilder_(context);
    }

    public static RegActivity_.IntentBuilder_ intent(Fragment supportFragment) {
        return new RegActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        edtRegLocation = ((TextView) hasViews.findViewById(id.edt_reg_location));
        tvAgreen = ((TextView) hasViews.findViewById(id.tv_agreen));
        ivRegAuthCode = ((ImageView) hasViews.findViewById(id.iv_reg_auth_code));
        ivUserNick = ((ImageView) hasViews.findViewById(id.iv_user_nick));
        edtUserNick = ((EditText) hasViews.findViewById(id.edt_user_nick));
        ivRegPasswordAgain = ((ImageView) hasViews.findViewById(id.iv_reg_password_again));
        ivRegPhone = ((ImageView) hasViews.findViewById(id.iv_reg_phone));
        edtRegBuild = ((TextView) hasViews.findViewById(id.edt_reg_build));
        ivRegPassword = ((ImageView) hasViews.findViewById(id.iv_reg_password));
        rlRegCity = ((RelativeLayout) hasViews.findViewById(id.rl_reg_city));
        btnRegImmediate = ((Button) hasViews.findViewById(id.btn_reg_immediate));
        ivBack = ((ImageView) hasViews.findViewById(id.iv_back));
        edtRegPhone = ((EditText) hasViews.findViewById(id.edt_reg_phone));
        llSheet = ((LinearLayout) hasViews.findViewById(id.ll_sheet));
        rlRegBuild = ((RelativeLayout) hasViews.findViewById(id.rl_reg_build));
        tvRegNote = ((TextView) hasViews.findViewById(id.tv_reg_note));
        cbCheck = ((CheckBox) hasViews.findViewById(id.cb_check));
        edtRegAuthCode = ((EditText) hasViews.findViewById(id.edt_reg_auth_code));
        edtRegPasswordAgain = ((EditText) hasViews.findViewById(id.edt_reg_password_again));
        ivCancelRemark = ((ImageView) hasViews.findViewById(id.iv_cancel_remark));
        txtSendAuthCode = ((TextView) hasViews.findViewById(id.txt_send_auth_code));
        llSendAuthCode = ((LinearLayout) hasViews.findViewById(id.ll_send_auth_code));
        edtRegPassword = ((EditText) hasViews.findViewById(id.edt_reg_password));
        {
            View view = hasViews.findViewById(id.rl_reg_city);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        RegActivity_.this.rlRegCity();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.btn_reg_immediate);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        RegActivity_.this.btnRegImmediate();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ll_send_auth_code);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        RegActivity_.this.llSendAuthCode();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.iv_back);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        RegActivity_.this.ivBack();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.tv_agreen);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        RegActivity_.this.tvAgreen();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.rl_reg_build);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        RegActivity_.this.rlRegBuild();
                    }

                }
                );
            }
        }
        afterViews();
    }

    @Override
    public void changeNumber() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                RegActivity_.super.changeNumber();
            }

        }
        );
    }

    @Override
    public void goBackMainThreadCode(final String msg, final boolean success) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                RegActivity_.super.goBackMainThreadCode(msg, success);
            }

        }
        );
    }

    @Override
    public void endRegButton() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                RegActivity_.super.endRegButton();
            }

        }
        );
    }

    @Override
    public void goBackMainThread(final String msg, final boolean success) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                RegActivity_.super.goBackMainThread(msg, success);
            }

        }
        );
    }

    @Override
    public void doSendMessage() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    RegActivity_.super.doSendMessage();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void getGuestIdFromServer() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    RegActivity_.super.getGuestIdFromServer();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void checkTheCode() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    RegActivity_.super.checkTheCode();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;
        private Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, RegActivity_.class);
        }

        public IntentBuilder_(Fragment fragment) {
            fragmentSupport_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, RegActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public RegActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent_, requestCode);
            } else {
                if (context_ instanceof Activity) {
                    ((Activity) context_).startActivityForResult(intent_, requestCode);
                } else {
                    context_.startActivity(intent_);
                }
            }
        }

    }

}
